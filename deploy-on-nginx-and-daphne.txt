https://okbaboularaoui.medium.com/how-to-set-up-django-with-postgres-nginx-and-daphne-django-channels-on-ubuntu-20-04-b0d24dcc7da9

https://youtu.be/TLGucyn9URA?si=wiMeBthxhKz_dGxc

add ssl cert = https://github.com/django/daphne



sudo nano /etc/systemd/system/daphne.service
=================daphne=====================
[Unit]
Description=daphne daemon
Requires=daphne.socket
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/var/www/jobFinder
ExecStart=/var/www/jobFinder/env/bin/daphne -b 0.0.0.0 -p 8000 jobFinder.asgi:application

[Install]
WantedBy=multi-user.target
=====================================
for ssl:
ExecStart=/var/www/jobFinder/env/bin/daphne -e ssl:8000:privateKey=ssl/ceveve.com.key:certKey=ssl/ceveve_com/ceveve_com.crt -b www.ceveve.com -p 8001 --proxy-headers jobFinder.asgi:application
=====================================



sudo nano /etc/nginx/sites-available/myproject
=================nginx====================
upstream channels-backend {server localhost:8000;}

server {
listen 80;
server_name www.ceveve.com;
location = /favicon.ico { access_log off; log_not_found off; }
location /static/ {
root /var/www/jobFinder;
}
location /media/ {
root /var/www/jobFinder;
}
location / {
proxy_pass http://channels-backend;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "Upgrade";
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host;
proxy_redirect off;
}
}

==============nginx-ssl==============
upstream channels-backend {server localhost:8000;}

server {
server_name www.ceveve.com;
location = /favicon.ico { access_log off; log_not_found off; }
location /static/ {
root /var/www/jobFinder;
}
location /media/ {
root /var/www/jobFinder;
}
location / {
    try_files $uri @proxy_to_app;
}

location @proxy_to_app {
    proxy_pass https://channels-backend;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /var/www/jobFinder/ssl/ceveve_com/ceveve_com.crt; # managed by Certbot
    ssl_certificate_key /var/www/jobFinder/ssl/ceveve.com.key; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = www.ceveve.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    
listen 80;
server_name www.ceveve.com;
    return 404; # managed by Certbot

}
=====================================

sudo systemctl restart nginx
sudo systemctl daemon-reload
sudo systemctl restart daphne





===========================================
Celery Configuration
===========================================
1--> sudo nano /etc/default/celeryd

CELERYD_NODES="jobFinder_worker"
CELERY_BIN="/var/www/jobFinder/env/bin/celery"
CELERY_APP="jobFinder"
CELERYD_MULTI="multi"
CELERYD_OPTS=" --time-limit=600 --concurrency=2"
CELERYD_LOG_LEVEL="DEBUG"
CELERYD_LOG_FILE="/var/log/celery/%n%I.log"
CELERYD_PID_FILE="/var/run/celery/%n.pid"
CELERYBEAT_PID_FILE="/var/run/celery/beat.pid"
CELERYBEAT_LOG_FILE="/var/log/celery/beat.log"
CELERYD_USER="root"
CELERYD_GROUP="root"
CELERY_CREATE_DIRS=1

2--> Create a celery service file
2-->sudo nano /etc/systemd/system/celery.service

[Unit]
Description=Celery Service
After=network.target
[Service]
Type=forking
User=root
Group=root
EnvironmentFile=/etc/default/celeryd
WorkingDirectory=/var/www/jobFinder
ExecStart=/bin/sh -c '${CELERY_BIN} -A $CELERY_APP multi start $CELERYD_NODES \
--pidfile=${CELERYD_PID_FILE} --logfile=${CELERYD_LOG_FILE} \
--loglevel="${CELERYD_LOG_LEVEL}" $CELERYD_OPTS'
ExecStop=/bin/sh -c '${CELERY_BIN} multi stopwait $CELERYD_NODES \
--pidfile=${CELERYD_PID_FILE} --loglevel="${CELERYD_LOG_LEVEL}"'
ExecReload=/bin/sh -c '${CELERY_BIN} -A $CELERY_APP multi restart $CELERYD_NODES \
--pidfile=${CELERYD_PID_FILE} --logfile=${CELERYD_LOG_FILE} \
--loglevel="${CELERYD_LOG_LEVEL}" $CELERYD_OPTS'
Restart=always
[Install]
WantedBy=multi-user.target


3-->Create a celery beat service file
3-->sudo nano /etc/systemd/system/celerybeat.service
[Unit]
Description=Celery beat service
After=network.target celery.service
[Service]
Type=simple
User=root
Group=root
EnvironmentFile=/etc/default/celeryd
WorkingDirectory=/var/www/jobFinder
ExecStart=/bin/sh -c '${CELERY_BIN} -A ${CELERY_APP} beat  \
--pidfile=${CELERYBEAT_PID_FILE} \
--logfile=${CELERYBEAT_LOG_FILE} --loglevel=${CELERYD_LOG_LEVEL}'
ExecStop=/bin/systemctl kill celerybeat.service
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target


4--> Run the following commands
sudo systemctl daemon-reloadsudo systemctl enable celery.service
sudo systemctl enable celerybeat.service
sudo mkdir /var/log/celery
sudo chown -R root:root /var/log/celery
sudo mkdir /var/run/celery
sudo chown -R root:root /var/run/celery

sudo systemctl restart celerybeat.service
sudo systemctl restart celery.service